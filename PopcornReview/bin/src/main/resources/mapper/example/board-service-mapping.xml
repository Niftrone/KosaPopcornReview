<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="ns.sql.BoardMapper">
<!-- 
	게시글작성
	게시글삭제 
	게시글수정
	전체게시글보기
	특정게시글보기
 -->
 
<!-- useGeneratedKeys="true" 게시글이 입력될때 자동으로 값을 증가시켜라
	 그리고 증가된 그 값을 keyProperty="no" 에 넣어라
	 board.setNo(!!!)
	 
	 결과적으로 pvo와 rvo의 동기화
 -->
<insert id="write" parameterType="board" useGeneratedKeys="true" keyProperty="no">
	INSERT INTO springboard (title, content, w_date, id)
	VALUES(#{title}, #{content}, curdate(), #{member.id})
</insert>

<!-- 특정 게시글이 입력될때 curdate() 날짜를 디비에서 받아오는 기능 -->
<select id="selectByNoForDate" parameterType="int" resultType="string">
	SELECT w_date
	FROM springboard
	WHERE no = #{no}
</select>

<!-- 전체 게시물보기 결과물  -->
<resultMap type="board" id="boardListRM">
	<id property="no" column="no"/>
	<result property="title" column="title"/>
	<result property="writeDate" column="w_date"/>
	<result property="count" column="count"/>
	<association property="member" javaType="member">
		<id property="id" column="id"/>
		<id property="password" column="password"/>
		<id property="name" column="name"/>
		<id property="address" column="address"/>
	</association>
</resultMap>

<select id="getBoardList" resultMap="boardListRM">
	SELECT b.no, b.title, b.count, b.w_date, m.name
	FROM springboard b, member m
	WHERE b.id = m.id
	ORDER BY no DESC
</select>

<!-- 상세글 보기 결과맵 -->
<resultMap type="board" id="boardRM" extends="boardListRM">
	<result property="content" column="content"/>
	<result property="member.id" column="id"/>
</resultMap>

<select id="showContent" parameterType="int" resultMap="boardRM">
	SELECT b.no, b.title, b.count, b.w_date, b.content, m.id, m.name
	FROM springboard b, member m
	WHERE b.id = m.id
	AND b.no = #{no}
	ORDER BY no DESC
</select>

<!-- 글 삭제하기 -->
<delete id="deleteBoard" parameterType="int">
	DELETE FROM springboard
	WHERE no = #{no}
</delete>

<!-- 글 수정하기 -->
<update id="updateBoard" parameterType="board">
	UPDATE springboard
	SET title = #{title}, content = #{content}
	WHERE no = #{no}
</update>

<!-- 글 조회수 증가시키기 -->
<update id="updateCount" parameterType="int">
	UPDATE springboard
	SET count = count + 1
	WHERE no = #{no}
</update>
 
 
 
</mapper>

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
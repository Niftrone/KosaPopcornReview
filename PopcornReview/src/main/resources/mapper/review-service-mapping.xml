<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ns.sql.ReviewMapper">
<!-- 동적쿼리 : 회원검색 + 로그인 -->
	<resultMap id="reviewRM" type="review">
		 <id column="r_id" property="rId"/>
         <result column="r_rating" property="rRating"/>
         <result column="r_plot" property="rPlot"/>
         <result column="r_date" property="rDate"/> 
        
         <association property="user" javaType="user">
            <id column="user_id" property="id"/>
            </association>

         <association property="movie" javaType="com.service.popcornreview.vo.Movie">
            <id column="m_id" property="mId"/>
            </association>
	</resultMap>
	
	
	<select id="getAllReviews" parameterType="review" resultMap="reviewRM">
	    SELECT 
	        r.r_id,
	        r.r_rating,
	        r.r_plot,
	        r.r_date,
	        u.id AS user_id,
	        m.m_id
	    FROM 
	        review r
	    LEFT JOIN 
	        user u ON r.user_id = u.id
	    LEFT JOIN 
	        movie m ON r.m_id = m.m_id
	    
	    <where>
	        <choose>
	            <when test="movie != null and movie.mId != null">
	                m.m_id = #{movie.mId}
	            </when>
	            
	            <when test="user != null and user.id != null">
	                u.id = #{user.id}
	            </when>
	            <when test="rId != null">
	            	r.r_id = #{rId}
	            </when>
	            
	            <otherwise></otherwise>
	        </choose>
	    </where>
	    
	    
	    ORDER BY r.r_date DESC
	</select>
  
	<insert id="addReview" parameterType="review">
		INSERT INTO review
			(r_rating, r_plot, r_date, user_id, m_id)
		VALUES
			(#{rRating}, #{rPlot}, NOW(), #{user.id}, #{movie.mId})
	</insert>

	<update id="updateReview" parameterType="review">
		UPDATE review
		SET
			r_rating = #{rRating},
			r_plot = #{rPlot}
		WHERE
			r_id = #{rId}
	</update>

	<delete id="deleteReview" parameterType="int">
		DELETE 
		FROM review
		WHERE r_id = #{rId}
	</delete>
	<!-- user가 삭제될떄 같이 삭제됨 -->
	<delete id="deleteReviewsByUserId" parameterType="string">
    DELETE FROM review WHERE user_id = #{userId}
</delete>
</mapper>
